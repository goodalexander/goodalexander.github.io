name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.121.1
      ACTIONS_STEP_DEBUG: true  # Enable debug logs for all steps
    steps:
      - name: Enable Debugging
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Install Hugo CLI
        run: |
          echo "Installing Hugo CLI..." 
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass Embedded
        run: |
          echo "Installing Dart Sass Embedded..." 
          sudo snap install dart-sass-embedded

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Install Node.js dependencies
        run: |
          echo "Installing Node.js dependencies..." 
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || echo "No Node.js dependencies to install."

      - name: Build Hugo Site
        run: |
          echo "Building Hugo site..." 
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Debug Hugo Output
        run: |
          echo "Debugging Hugo output directory..." 
          ls -la ./public

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pages-artifact
          path: ./public
        continue-on-error: false  # Ensure this step fails loudly if something goes wrong

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    env:
      ACTIONS_STEP_DEBUG: true  # Enable debug logs for all steps
    steps:
      - name: Enable Debugging
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Debug Available Artifacts
        run: |
          echo "Listing available artifacts..." 
          ls -la $GITHUB_WORKSPACE

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: pages-artifact
          path: ./artifact-output
        continue-on-error: false  # Ensure this step fails loudly if something goes wrong

      - name: Debug Downloaded Artifact
        run: |
          echo "Debugging downloaded artifact directory..." 
          ls -la ./artifact-output

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: pages-artifact
        continue-on-error: false  # Ensure this step fails loudly if something goes wrong
